version: "3.9"
services:
    
  Item:
    container_name: MicroserviceItem-s
    build: .\MicroserviceItem
    ports:
      - "8055:8055"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://db-mysql:3306/Troc?createDatabaseIfNotExist=true&userSSL=false
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://serviceregistry:8761/eureka/      
    restart: unless-stopped

    image: "microitem"
    depends_on:
      - Eureka
      - db-mysql

  Organisation:
    container_name: MicroserviceOrganisation-s
    build: .\MicroserviceOrganisation
    ports:
      - "9090:8044"
    environment:
      - spring.datasource.url=jdbc:h2:mem:testdb;
      - SPRING_DATASOURCE_USERNAME=organisation
      - SPRING_DATASOURCE_PASSWORD=
      - eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
    restart: unless-stopped

    image: "microorganisation"
    depends_on:
      - Eureka
      - db-h2

  Trade:
    container_name: MicroserviceTrade-s
    image: "trade"
    build: .\MicroserviceTrade
    ports:
      - "8086:8086"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://db-mysql:3306/Troc?createDatabaseIfNotExist=true&userSSL=false
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://serviceregistry:8761/eureka/
    restart: unless-stopped
    depends_on:
      - Eureka
      - db-mysql

  Posts:
    container_name: posts
    build: .\posts
    image: "posts"
    ports:
      - "8088:8088"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://db-mysql:3306/Troc?createDatabaseIfNotExist=true&userSSL=false
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://serviceregistry:8761/eureka/      
    restart: unless-stopped
    depends_on:
      - Eureka
      - db-mysql

  Users:
    container_name: users
    build: .\MicroServiceUser
    image: "users"
    ports:
      - "8075:8075"
    environment:
      - eureka.client.serviceUrl.defaultZone=http://serviceregistry:8761/eureka/
    depends_on:
        - Eureka

  Eureka:
    container_name: eureka
    build: .\Eureka_Server_EcoExchange
    hostname: serviceregistry
    ports:
      - "8761:8761"   
    image: "eureka"
    
    environment:
      - eureka.client.serviceUrl.defaultZone=http://serviceregistry:8761/eureka/
    
  
  db-mysql:
      image: "mysql:5.6"
      container_name: db-mysql  
      environment:
        - MYSQL_ROOT_PASSWORD=root
        #- MYSQL_DATABASE=job
      ports:
        - "3306:3306"
      restart: unless-stopped  

  db-h2:
    image: "h2_image"  # Remplacez "h2_image" par l'image H2 que vous utilisez
    container_name: db-h2


  apigateway:
    container_name: Api_Gateway_Server
    image: "apigatewayms"
    build: .\apigateway
    ports:
      - "8090:8090"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://serviceregistry:8761/eureka/
    depends_on:
      - "Eureka"
      - db-mysql

    
#  complaint:
#    container_name: MicroserviceComplaint-s
#    build: .\microserviceComplaint
#    ports:
#      - "8055:8055"
#    environment:
#      - SPRING_DATASOURCE_URL=jdbc:mongodb://mongodb:27017/Troc  # Utilisez le nom du service MongoDB comme hôte
#      - SPRING_DATASOURCE_USERNAME=admin
#      - SPRING_DATASOURCE_PASSWORD=admin
#      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://serviceregistry:8761/eureka/
#    restart: unless-stopped
#    depends_on:
#      - Eureka
#      - mongodb  # Dépend de MongoDB


  mongodb:
    container_name: mongodb
    image: mongo:latest  # Utilisez l'image la plus récente de MongoDB
    ports:
      - "27017:27017"  # Port par défaut de MongoDB
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin
    restart: unless-stopped
eureka:
  client:
    service-url:
      defaultZone=http://localhost:8761/eureka/:
